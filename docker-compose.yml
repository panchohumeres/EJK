version: "3"

services:

  jupyter:
    build:
      context: ./jupyter
    ports:
      - "8888:8888"
    command: jupyter-notebook --NotebookApp.password=${JUPYTER_PSSWD}
    volumes:
      - notebooks:/home/jovyan/work
      - data:/data
      - certs:/certs
      - ./jupyter_config:/home/jovyan/.jupyter/

  es01:
    container_name: es01
    image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0
    environment:
      - node.name=es01
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01,es02
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD 
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=$CERTS_DIR/es01/es01.key
      - xpack.security.http.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.http.ssl.certificate=$CERTS_DIR/es01/es01.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate 
      - xpack.security.transport.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.transport.ssl.certificate=$CERTS_DIR/es01/es01.crt
      - xpack.security.transport.ssl.key=$CERTS_DIR/es01/es01.key
      - xpack.security.authc.anonymous.roles=dashboard_only_custom
      - xpack.security.authc.anonymous.authz_exception=true

    volumes: ['data01:/usr/share/elasticsearch/data', 'certs:$CERTS_DIR']
    ports:
      - 9200:9200
    healthcheck:
      test: curl --cacert $CERTS_DIR/ca/ca.crt -s https://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5

  es02:
    container_name: es02
    image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0
    environment:
      - node.name=es02
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01,es02
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=$CERTS_DIR/es02/es02.key
      - xpack.security.http.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.http.ssl.certificate=$CERTS_DIR/es02/es02.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate 
      - xpack.security.transport.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.transport.ssl.certificate=$CERTS_DIR/es02/es02.crt
      - xpack.security.transport.ssl.key=$CERTS_DIR/es02/es02.key
    volumes: ['data02:/usr/share/elasticsearch/data', 'certs:$CERTS_DIR']

  kibana:
    container_name: kibana_enc
    image: docker.elastic.co/kibana/kibana:7.2.0
    environment:
      - KIBANA_PASSWORD=${KIBANA_PASSWORD}
      - ELASTICSEARCH_HOSTS=https://es01:9200
      - XPACK_SECURITY_ENABLED=true
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=$ELASTIC_PASSWORD
      - ELASTICSEARCH_SSL_CERTIFICATE=$CERTS_DIR/es01/es01.crt
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=$CERTS_DIR/ca/ca.crt
      - ELASTICSEARCH_SSL_KEY=$CERTS_DIR/es01/es01.key
      - ELASTICSEARCH_SSL_VERIFICATIONMODE=certificate
      - XPACK_SECURITY_AUDIT_ENABLED=true
      - XPACK_SECURITY_AUTHC_ANONYMOUS_ROLES=dashboard_only_custom
      - XPACK_SECURITY_AUTHC_ANONYMOUS_AUTHZ_EXCEPTION=true
    ports:
      - 5601:5601
    volumes: ['kibana_log:/var/log', 'certs:$CERTS_DIR']

  nginx:
    image: nginx:latest
    ports:
        - 8080:80
    volumes:
        - ${PWD}/nginx-config/:/etc/nginx/conf.d/
    command: /bin/bash -c "nginx -g 'daemon off;'"
    ulimits:
      nproc: 65535


  wait_until_ready:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0
    command: /usr/bin/true
    depends_on: ["es01"]

volumes: {"data01", "data02","data", "certs","notebooks","kibana_log"}